// Generated by view binder compiler. Do not edit!
package com.example.messenger_berry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.messenger_berry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserAccountBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageViewUserImage;

  @NonNull
  public final TextView textViewEmailUserAccount;

  @NonNull
  public final TextView textViewUserEmailUserAccount;

  @NonNull
  public final TextView textViewUsernameUserAccount;

  @NonNull
  public final ToolBarSimpleBackBinding toolBarUserAccount;

  private ActivityUserAccountBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageViewUserImage, @NonNull TextView textViewEmailUserAccount,
      @NonNull TextView textViewUserEmailUserAccount, @NonNull TextView textViewUsernameUserAccount,
      @NonNull ToolBarSimpleBackBinding toolBarUserAccount) {
    this.rootView = rootView;
    this.imageViewUserImage = imageViewUserImage;
    this.textViewEmailUserAccount = textViewEmailUserAccount;
    this.textViewUserEmailUserAccount = textViewUserEmailUserAccount;
    this.textViewUsernameUserAccount = textViewUsernameUserAccount;
    this.toolBarUserAccount = toolBarUserAccount;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView_userImage;
      ImageView imageViewUserImage = ViewBindings.findChildViewById(rootView, id);
      if (imageViewUserImage == null) {
        break missingId;
      }

      id = R.id.textView_email_user_account;
      TextView textViewEmailUserAccount = ViewBindings.findChildViewById(rootView, id);
      if (textViewEmailUserAccount == null) {
        break missingId;
      }

      id = R.id.textView_user_email_user_account;
      TextView textViewUserEmailUserAccount = ViewBindings.findChildViewById(rootView, id);
      if (textViewUserEmailUserAccount == null) {
        break missingId;
      }

      id = R.id.textView_username_user_account;
      TextView textViewUsernameUserAccount = ViewBindings.findChildViewById(rootView, id);
      if (textViewUsernameUserAccount == null) {
        break missingId;
      }

      id = R.id.tool_bar_user_account;
      View toolBarUserAccount = ViewBindings.findChildViewById(rootView, id);
      if (toolBarUserAccount == null) {
        break missingId;
      }
      ToolBarSimpleBackBinding binding_toolBarUserAccount = ToolBarSimpleBackBinding.bind(toolBarUserAccount);

      return new ActivityUserAccountBinding((ConstraintLayout) rootView, imageViewUserImage,
          textViewEmailUserAccount, textViewUserEmailUserAccount, textViewUsernameUserAccount,
          binding_toolBarUserAccount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
